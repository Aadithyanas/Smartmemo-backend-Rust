//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.13

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "users")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub username: String,
    #[sea_orm(unique)]
    pub email: String,
    pub password: String,
    pub created_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::helper_app::Entity")]
    HelperApp,
    #[sea_orm(has_many = "super::voice_memos1::Entity")]
    VoiceMemos1,
}

impl Related<super::helper_app::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::HelperApp.def()
    }
}

impl Related<super::voice_memos1::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::VoiceMemos1.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
